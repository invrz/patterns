@import "variables";

//common devices - not responsive
.gridRow {
    display: flex;
    flex-grow: 1;
    flex-wrap: nowrap;

    @for $i from 0 through $partitions {
        .colWd-#{$i} {
            @if $i == 0 {
                display: none;
            }
            @else {
                flex: calc(#{$i} / $partitions);
                min-width: calc(100% / $partitions * #{$i});
                max-width: calc(100% / $partitions * #{$i});
            }
        }
    }
    @for $i from 0 through $gutters {
        .gutterWd-#{$i} {
            @if $i == 0 {
                display: none;
            }
            @else {
                content: " ";
                flex: calc(#{$i} / $gutters);
                min-width: calc(100% / $gutters * #{$i});
                max-width: calc(100% / $gutters * #{$i});
            }
        }
    }
}
//square devices
@media screen and (aspect-ratio: 1) {
    .gridRow {
      display: flex;
      flex-grow: 1;
      flex-wrap: nowrap;
  
        @for $i from 0 through $partitions {
            .colWd-#{$i}-sq {
                @if $i == 0 {
                    display: none;
                }
                @else {
                    flex: calc(#{$i} / $partitions);
                    min-width: calc(100% / $partitions * #{$i});
                    max-width: calc(100% / $partitions * #{$i});
                }
            }
        }
    }
}

//portrait devices
@media screen and (max-aspect-ratio: 1) {
    .gridRow {
      display: flex;
      flex-grow: 1;
      flex-wrap: nowrap;
  
        @for $i from 0 through $partitions {
            .colWd-#{$i}-sm {
                @if $i == 0 {
                    display: none;
                }
                @else {
                    flex: calc(#{$i} / $partitions);
                    min-width: calc(100% / $partitions * #{$i});
                    max-width: calc(100% / $partitions * #{$i});
                }
            }
        }
    }
}

//landscape devices
@media screen and (min-aspect-ratio: 1) {
    .gridRow {
      display: flex;
      flex-grow: 1;
      flex-wrap: nowrap;
      
      &.withBorder{
        border: 1px solid $primaryText;

        *{
            border: 1px solid $primaryText;
        }
      }
  
        @for $i from 0 through $partitions {
            .colWd-#{$i}-ld {
                @if $i == 0 {
                    display: none;
                }
                @else {
                    flex: calc(#{$i} / $partitions);
                    min-width: calc(100% / $partitions * #{$i});
                    max-width: calc(100% / $partitions * #{$i});
                }
            }
        }
    }
}

.rowLeft{
    justify-content: flex-start;
    justify-items: flex-start;
}
.rowRight{
    justify-content: flex-end;
    justify-items: flex-end;
}
.rowCenter{
    justify-content: center;
    justify-items: center;
}
.rowTop{
    align-items: flex-start;
    align-content: flex-start;
}
.rowBottom{
    align-items: flex-end;
    align-content: flex-end;
}
.rowMiddle{
    align-items: center;
    align-content: center;
}

/* Define the row height classes */
.colHi-auto{
    height: max-content;
}
@for $i from 0 through 10 {
    .colHi-#{$i} {
        height: calc(10vh * #{$i});
    }
}